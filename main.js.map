{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./src/styles.css","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/nonce","webpack:///./src/styles.css?44b2","webpack:///./src/Ship.js","webpack:///./src/Game.js","webpack:///./src/GameBoard.js","webpack:///./src/Player.js","webpack:///./src/ShipPlacementController.js","webpack:///./src/GameController.js","webpack:///./src/Renderer.js","webpack:///./src/index.js"],"sourcesContent":["\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*\n  Josh's Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  html {\n    interpolate-size: allow-keywords;\n  }\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\np {\n  text-wrap: pretty;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  text-wrap: balance;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n.hidden {\n  display: none;\n}\n\nhtml {\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  background-color: #121212;\n  font-family: Arial, Helvetica, \"Nimbus Sans L\", \"Liberation Sans\", sans-serif;\n  min-width: 1600px;\n}\n\n#header {\n  font-size: 3rem;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n/* Mode Selection Container */\n\n#mode-selection-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n  background: rgb(36, 36, 36);\n}\n\n#mode-selection-container.hidden {\n  display: none;\n}\n\n#mode-selection-title {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n#mode-selection-buttons {\n  display: flex;\n  gap: 2rem;\n}\n\n#pvp-selection-button,\n#pve-selection-button {\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #bb86fc;\n  font-weight: bold;\n}\n\n#pvp-selection-button:hover,\n#pve-selection-button:hover {\n  opacity: 0.9;\n}\n\n/* Game Status Container */\n\n#game-status-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n  background: rgb(36, 36, 36);\n  color: rgba(255, 255, 255, 0.87);\n}\n\n#game-status-header {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n#game-status-message {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n/* Playing Section */\n\n#playing-section {\n  display: flex;\n  flex-direction: row;\n  gap: 5rem;\n}\n\n/* Ship Placement Container */\n\n#ship-placement-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n  background: rgb(36, 36, 36);\n  height: 100%;\n}\n\n#ship-placement-container.hidden {\n  display: none;\n}\n\n#ship-placement-header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n/* Draggable Ships Container */\n\n#draggable-ships-section {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n}\n\n#draggable-ships-section-header {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n#draggable-ships-section-text {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n#draggable-ships-container {\n  display: flex;\n  flex-direction: column;\n  width: 20rem;\n  padding: 0.5rem;\n  margin-top: 0.5rem;\n  gap: 0.5rem;\n  border-radius: 6px;\n  background-color: rgb(52, 52, 52);\n}\n\n.draggable-ship {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem;\n  background-color: rgb(70, 70, 70);\n  border: 1px solid rgb(52, 52, 52);\n  border-radius: 6px;\n  cursor: grab;\n}\n\n.draggable-ship:hover {\n  background-color: rgba(70, 70, 70, 0.7);\n  border-color: #bb86fc;\n}\n\n.draggable-ship-name {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n  min-width: 8rem;\n}\n\n.draggable-ship-visual {\n  display: flex;\n}\n\n.draggable-ship-visual::before {\n  content: \"\";\n  display: inline-block;\n  width: 1.25rem;\n  height: 1.25rem;\n  background-color: rgba(255, 255, 255, 0.38);\n}\n\n.draggable-ship-visual[data-length=\"2\"]::before {\n  box-shadow: 1.25rem 0 rgba(255, 255, 255, 0.38);\n}\n.draggable-ship-visual[data-length=\"3\"]::before {\n  box-shadow:\n    1.25rem 0 rgba(255, 255, 255, 0.38),\n    2.5rem 0 rgba(255, 255, 255, 0.38);\n}\n.draggable-ship-visual[data-length=\"4\"]::before {\n  box-shadow:\n    1.25rem 0 rgba(255, 255, 255, 0.38),\n    2.5rem 0 rgba(255, 255, 255, 0.38),\n    3.75rem 0 rgba(255, 255, 255, 0.38);\n}\n.draggable-ship-visual[data-length=\"5\"]::before {\n  box-shadow:\n    1.25rem 0 rgba(255, 255, 255, 0.38),\n    2.5rem 0 rgba(255, 255, 255, 0.38),\n    3.75rem 0 rgba(255, 255, 255, 0.38),\n    5rem 0 rgba(255, 255, 255, 0.38);\n}\n\n.draggable-ship-visual.vertical {\n  transform: rotate(90deg);\n  transform-origin: center;\n}\n\n.draggable-ship.dragging {\n  opacity: 0.5;\n  cursor: grabbing;\n}\n\n.dragging {\n  opacity: 0.5;\n  cursor: grabbing;\n}\n\n.valid-drop-preview {\n  background-color: lightgreen !important;\n  border-color: green !important;\n}\n\n.invalid-drop-preview {\n  background-color: lightpink !important;\n  border-color: red !important;\n}\n\n/* Board Controls */\n\n#board-controls-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n.board-control {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 0.5rem;\n  background-color: rgb(52, 52, 52);\n  padding: 0.5rem;\n  min-width: 20rem;\n}\n\n.board-control-title {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.board-control-buttons {\n  display: flex;\n  gap: 1rem;\n}\n\n#left-board-random-placement-button,\n#right-board-random-placement-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #bb86fc;\n  font-weight: bold;\n  height: 2rem;\n}\n\n#left-board-random-placement-button:hover,\n#right-board-random-placement-button:hover {\n  opacity: 0.9;\n}\n\n#left-board-reset-placement-button,\n#right-board-reset-placement-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #3700b3;\n  color: rgba(255, 255, 255, 0.87);\n  font-weight: bold;\n  height: 2rem;\n}\n\n#left-board-reset-placement-button:hover,\n#right-board-reset-placement-button:hover {\n  opacity: 0.9;\n}\n\n/* Manual Placement Section */\n\ndetails > summary {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.38);\n  text-align: center;\n}\n\n#manual-placement-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  margin-top: 0.5rem;\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.manual-placement-board {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(52, 52, 52);\n  padding: 0.5rem;\n}\n\n.manual-placement-board-title {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.manual-placement-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 0.5rem;\n  color: rgba(255, 255, 255, 0.87);\n  min-width: 23rem;\n}\n\n#left-board-manual-placement-button,\n#right-board-manual-placement-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #bb86fc;\n  font-weight: bold;\n  height: 2rem;\n  width: 10rem;\n  align-self: center;\n}\n\n#left-board-manual-placement-error,\n#right-board-manual-placement-error {\n  color: #cf6679;\n  font-weight: bold;\n  text-align: center;\n}\n\n/* Game Board Container */\n\n#playing-section-right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  height: 100%;\n}\n\n#game-boards-container {\n  display: flex;\n  flex-direction: row;\n  gap: 5rem;\n}\n\n#left-header,\n#right-header {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.87);\n  text-align: center;\n}\n\n.game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 500px;\n  height: 500px;\n}\n\n.game-board-square {\n  border: 1px solid grey;\n  aspect-ratio: 1;\n  position: relative;\n}\n\n.water {\n  background-color: skyblue;\n}\n\n.ship {\n  background-color: lightgrey;\n}\n\n.hidden-ship {\n  background-color: skyblue;\n}\n\n.miss {\n  background-color: skyblue;\n}\n\n.miss::after {\n  content: \"•\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: whitesmoke;\n  font-size: 6rem;\n  font-weight: bold;\n  pointer-events: none;\n}\n\n.hit {\n  background-color: lightgrey;\n}\n\n.hit::after {\n  content: \"❌\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 2rem;\n  font-weight: bold;\n  pointer-events: none;\n}\n\n/* Start Game Buttons Container */\n\n#start-game-buttons-container,\n#playing-game-buttons-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\n#start-game-buttons-container.hidden,\n#playing-game-buttons-container.hidden {\n  display: none;\n}\n\n#start-game-button-container,\n#quick-start-button-container,\n#start-new-game-button-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  background-color: rgb(36, 36, 36);\n  padding: 0.5rem;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n#quick-start-button-container.hidden {\n  display: none;\n}\n\n#start-game-button,\n#quick-start-button,\n#start-new-game-button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #03dac6;\n  font-weight: bold;\n  height: 2rem;\n}\n\n#start-game-button:hover,\n#quick-start-button:hover,\n#start-new-game-button:hover {\n  opacity: 0.9;\n}\n\n#start-game-buttons-error {\n  color: #cf6679;\n  font-weight: bold;\n  font-size: 1rem;\n}\n\n#start-new-game-from-mode-selection-explanation {\n  font-size: 1rem;\n  font-weight: bold;\n  color: rgba(255, 255, 255, 0.38);\n  text-align: center;\n}\n\n/* Pass Device Screen */\n\n#pass-device-screen {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  gap: 2rem;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0);\n  z-index: 1000;\n}\n\n#pass-device-message {\n  text-align: center;\n  font-size: 2rem;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n#pass-device-continue-button {\n  border: none;\n  border-radius: 6px;\n  padding: 0.5rem;\n  cursor: pointer;\n  background-color: #bb86fc;\n  font-weight: bold;\n  font-size: 2rem;\n}\n\n#pass-device-continue-button:hover {\n  opacity: 0.9;\n}\n\n#pass-device-screen.hidden {\n  display: none;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*\\n  Josh's Custom CSS Reset\\n  https://www.joshwcomeau.com/css/custom-css-reset/\\n*/\\n\\n*,\\n*::before,\\n*::after {\\n  box-sizing: border-box;\\n}\\n\\n* {\\n  margin: 0;\\n}\\n\\n@media (prefers-reduced-motion: no-preference) {\\n  html {\\n    interpolate-size: allow-keywords;\\n  }\\n}\\n\\nbody {\\n  line-height: 1.5;\\n  -webkit-font-smoothing: antialiased;\\n}\\n\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n  display: block;\\n  max-width: 100%;\\n}\\n\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n  font: inherit;\\n}\\n\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  overflow-wrap: break-word;\\n}\\n\\np {\\n  text-wrap: pretty;\\n}\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  text-wrap: balance;\\n}\\n\\n#root,\\n#__next {\\n  isolation: isolate;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\nhtml {\\n  width: 100%;\\n}\\n\\nbody {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 1rem;\\n  background-color: #121212;\\n  font-family: Arial, Helvetica, \\\"Nimbus Sans L\\\", \\\"Liberation Sans\\\", sans-serif;\\n  min-width: 1600px;\\n}\\n\\n#header {\\n  font-size: 3rem;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n/* Mode Selection Container */\\n\\n#mode-selection-container {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 1rem;\\n  gap: 1rem;\\n  background: rgb(36, 36, 36);\\n}\\n\\n#mode-selection-container.hidden {\\n  display: none;\\n}\\n\\n#mode-selection-title {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n#mode-selection-buttons {\\n  display: flex;\\n  gap: 2rem;\\n}\\n\\n#pvp-selection-button,\\n#pve-selection-button {\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #bb86fc;\\n  font-weight: bold;\\n}\\n\\n#pvp-selection-button:hover,\\n#pve-selection-button:hover {\\n  opacity: 0.9;\\n}\\n\\n/* Game Status Container */\\n\\n#game-status-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 1rem;\\n  gap: 1rem;\\n  background: rgb(36, 36, 36);\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n#game-status-header {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.6);\\n}\\n\\n#game-status-message {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n/* Playing Section */\\n\\n#playing-section {\\n  display: flex;\\n  flex-direction: row;\\n  gap: 5rem;\\n}\\n\\n/* Ship Placement Container */\\n\\n#ship-placement-container {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 1rem;\\n  gap: 1rem;\\n  background: rgb(36, 36, 36);\\n  height: 100%;\\n}\\n\\n#ship-placement-container.hidden {\\n  display: none;\\n}\\n\\n#ship-placement-header {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n/* Draggable Ships Container */\\n\\n#draggable-ships-section {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 1rem;\\n}\\n\\n#draggable-ships-section-header {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.6);\\n}\\n\\n#draggable-ships-section-text {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n#draggable-ships-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 20rem;\\n  padding: 0.5rem;\\n  margin-top: 0.5rem;\\n  gap: 0.5rem;\\n  border-radius: 6px;\\n  background-color: rgb(52, 52, 52);\\n}\\n\\n.draggable-ship {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  padding: 0.5rem;\\n  background-color: rgb(70, 70, 70);\\n  border: 1px solid rgb(52, 52, 52);\\n  border-radius: 6px;\\n  cursor: grab;\\n}\\n\\n.draggable-ship:hover {\\n  background-color: rgba(70, 70, 70, 0.7);\\n  border-color: #bb86fc;\\n}\\n\\n.draggable-ship-name {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n  min-width: 8rem;\\n}\\n\\n.draggable-ship-visual {\\n  display: flex;\\n}\\n\\n.draggable-ship-visual::before {\\n  content: \\\"\\\";\\n  display: inline-block;\\n  width: 1.25rem;\\n  height: 1.25rem;\\n  background-color: rgba(255, 255, 255, 0.38);\\n}\\n\\n.draggable-ship-visual[data-length=\\\"2\\\"]::before {\\n  box-shadow: 1.25rem 0 rgba(255, 255, 255, 0.38);\\n}\\n.draggable-ship-visual[data-length=\\\"3\\\"]::before {\\n  box-shadow:\\n    1.25rem 0 rgba(255, 255, 255, 0.38),\\n    2.5rem 0 rgba(255, 255, 255, 0.38);\\n}\\n.draggable-ship-visual[data-length=\\\"4\\\"]::before {\\n  box-shadow:\\n    1.25rem 0 rgba(255, 255, 255, 0.38),\\n    2.5rem 0 rgba(255, 255, 255, 0.38),\\n    3.75rem 0 rgba(255, 255, 255, 0.38);\\n}\\n.draggable-ship-visual[data-length=\\\"5\\\"]::before {\\n  box-shadow:\\n    1.25rem 0 rgba(255, 255, 255, 0.38),\\n    2.5rem 0 rgba(255, 255, 255, 0.38),\\n    3.75rem 0 rgba(255, 255, 255, 0.38),\\n    5rem 0 rgba(255, 255, 255, 0.38);\\n}\\n\\n.draggable-ship-visual.vertical {\\n  transform: rotate(90deg);\\n  transform-origin: center;\\n}\\n\\n.draggable-ship.dragging {\\n  opacity: 0.5;\\n  cursor: grabbing;\\n}\\n\\n.dragging {\\n  opacity: 0.5;\\n  cursor: grabbing;\\n}\\n\\n.valid-drop-preview {\\n  background-color: lightgreen !important;\\n  border-color: green !important;\\n}\\n\\n.invalid-drop-preview {\\n  background-color: lightpink !important;\\n  border-color: red !important;\\n}\\n\\n/* Board Controls */\\n\\n#board-controls-container {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n.board-control {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 0.5rem;\\n  background-color: rgb(52, 52, 52);\\n  padding: 0.5rem;\\n  min-width: 20rem;\\n}\\n\\n.board-control-title {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n.board-control-buttons {\\n  display: flex;\\n  gap: 1rem;\\n}\\n\\n#left-board-random-placement-button,\\n#right-board-random-placement-button {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #bb86fc;\\n  font-weight: bold;\\n  height: 2rem;\\n}\\n\\n#left-board-random-placement-button:hover,\\n#right-board-random-placement-button:hover {\\n  opacity: 0.9;\\n}\\n\\n#left-board-reset-placement-button,\\n#right-board-reset-placement-button {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #3700b3;\\n  color: rgba(255, 255, 255, 0.87);\\n  font-weight: bold;\\n  height: 2rem;\\n}\\n\\n#left-board-reset-placement-button:hover,\\n#right-board-reset-placement-button:hover {\\n  opacity: 0.9;\\n}\\n\\n/* Manual Placement Section */\\n\\ndetails > summary {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.38);\\n  text-align: center;\\n}\\n\\n#manual-placement-content {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n  margin-top: 0.5rem;\\n  color: rgba(255, 255, 255, 0.6);\\n}\\n\\n.manual-placement-board {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: rgb(52, 52, 52);\\n  padding: 0.5rem;\\n}\\n\\n.manual-placement-board-title {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n.manual-placement-controls {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  margin-top: 0.5rem;\\n  color: rgba(255, 255, 255, 0.87);\\n  min-width: 23rem;\\n}\\n\\n#left-board-manual-placement-button,\\n#right-board-manual-placement-button {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #bb86fc;\\n  font-weight: bold;\\n  height: 2rem;\\n  width: 10rem;\\n  align-self: center;\\n}\\n\\n#left-board-manual-placement-error,\\n#right-board-manual-placement-error {\\n  color: #cf6679;\\n  font-weight: bold;\\n  text-align: center;\\n}\\n\\n/* Game Board Container */\\n\\n#playing-section-right {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n  height: 100%;\\n}\\n\\n#game-boards-container {\\n  display: flex;\\n  flex-direction: row;\\n  gap: 5rem;\\n}\\n\\n#left-header,\\n#right-header {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.87);\\n  text-align: center;\\n}\\n\\n.game-board {\\n  display: grid;\\n  grid-template-columns: repeat(10, 1fr);\\n  grid-template-rows: repeat(10, 1fr);\\n  width: 500px;\\n  height: 500px;\\n}\\n\\n.game-board-square {\\n  border: 1px solid grey;\\n  aspect-ratio: 1;\\n  position: relative;\\n}\\n\\n.water {\\n  background-color: skyblue;\\n}\\n\\n.ship {\\n  background-color: lightgrey;\\n}\\n\\n.hidden-ship {\\n  background-color: skyblue;\\n}\\n\\n.miss {\\n  background-color: skyblue;\\n}\\n\\n.miss::after {\\n  content: \\\"•\\\";\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  color: whitesmoke;\\n  font-size: 6rem;\\n  font-weight: bold;\\n  pointer-events: none;\\n}\\n\\n.hit {\\n  background-color: lightgrey;\\n}\\n\\n.hit::after {\\n  content: \\\"❌\\\";\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  font-size: 2rem;\\n  font-weight: bold;\\n  pointer-events: none;\\n}\\n\\n/* Start Game Buttons Container */\\n\\n#start-game-buttons-container,\\n#playing-game-buttons-container {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n#start-game-buttons-container.hidden,\\n#playing-game-buttons-container.hidden {\\n  display: none;\\n}\\n\\n#start-game-button-container,\\n#quick-start-button-container,\\n#start-new-game-button-container {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 1rem;\\n  background-color: rgb(36, 36, 36);\\n  padding: 0.5rem;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n#quick-start-button-container.hidden {\\n  display: none;\\n}\\n\\n#start-game-button,\\n#quick-start-button,\\n#start-new-game-button {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #03dac6;\\n  font-weight: bold;\\n  height: 2rem;\\n}\\n\\n#start-game-button:hover,\\n#quick-start-button:hover,\\n#start-new-game-button:hover {\\n  opacity: 0.9;\\n}\\n\\n#start-game-buttons-error {\\n  color: #cf6679;\\n  font-weight: bold;\\n  font-size: 1rem;\\n}\\n\\n#start-new-game-from-mode-selection-explanation {\\n  font-size: 1rem;\\n  font-weight: bold;\\n  color: rgba(255, 255, 255, 0.38);\\n  text-align: center;\\n}\\n\\n/* Pass Device Screen */\\n\\n#pass-device-screen {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  position: fixed;\\n  gap: 2rem;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0);\\n  z-index: 1000;\\n}\\n\\n#pass-device-message {\\n  text-align: center;\\n  font-size: 2rem;\\n  color: rgba(255, 255, 255, 0.87);\\n}\\n\\n#pass-device-continue-button {\\n  border: none;\\n  border-radius: 6px;\\n  padding: 0.5rem;\\n  cursor: pointer;\\n  background-color: #bb86fc;\\n  font-weight: bold;\\n  font-size: 2rem;\\n}\\n\\n#pass-device-continue-button:hover {\\n  opacity: 0.9;\\n}\\n\\n#pass-device-screen.hidden {\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Represents a ship in the battleship game\n */\nclass Ship {\n  /**\n   * Creates a new ship\n   * @param {number} length - The length of the ship (number of squares it occupies)\n   */\n  constructor(length) {\n    if (length <= 0) {\n      throw new Error(\"Ship length must be greater than 0\");\n    }\n    this.length = length;\n    this.hits = 0;\n  }\n\n  /**\n   * Records a hit on the ship\n   * @returns {void}\n   */\n  hit() {\n    this.hits += 1;\n  }\n\n  /**\n   * Checks if the ship has been sunk\n   * @returns {boolean} True if ship is sunk, false otherwise\n   */\n  isSunk() {\n    return this.hits >= this.length;\n  }\n}\n\nexport { Ship };\n","import { Ship } from \"./Ship.js\";\n\nconst SHIP_TYPES = {\n  Carrier: () => new Ship(5),\n  Battleship: () => new Ship(4),\n  Cruiser: () => new Ship(3),\n  Submarine: () => new Ship(3),\n  Destroyer: () => new Ship(2),\n};\n\nconst OG_UNPLACED_SHIPS = [\"Carrier\", \"Battleship\", \"Cruiser\", \"Submarine\", \"Destroyer\"];\n\nclass Game {\n  constructor(player1, player2) {\n    this.player1 = player1;\n    this.player2 = player2;\n    this.player1UnplacedShips = [...OG_UNPLACED_SHIPS];\n    this.player2UnplacedShips = [...OG_UNPLACED_SHIPS];\n    this.currentPlayer = player1;\n    this.opponent = player2;\n    this.gameState = \"running\";\n    this.winner = null;\n  }\n\n  switchTurn() {\n    [this.currentPlayer, this.opponent] = [this.opponent, this.currentPlayer];\n  }\n\n  isGameOver() {\n    return this.opponent.gameBoard.allShipsSunk();\n  }\n\n  endGame() {\n    this.gameState = \"ended\";\n    this.winner = this.currentPlayer;\n  }\n\n  /**\n   * Processes a single turn in the game, handling attacks and turn switching\n   * @param {number[]|null} coordinates - Attack coordinates [row, column] for human players,\n   * null for computer\n   * @returns {boolean|string} Attack result - true for hit, false for miss, \"already-attacked\"\n   * if square was already attacked\n   */\n  processTurn(coordinates = null) {\n    let result;\n\n    if (this.currentPlayer.type === \"computer\") {\n      const attackInfo = this.currentPlayer.computerAttack(this.opponent.gameBoard);\n      result = attackInfo.result;\n      this.currentPlayer.updateComputerAttackStrategy(\n        attackInfo.result,\n        attackInfo.coordinates,\n        this.opponent.gameBoard,\n      );\n    } else if (this.currentPlayer.type === \"real\") {\n      result = this.opponent.gameBoard.receiveAttack(coordinates);\n    } else {\n      throw new Error(`Invalid Player Type: ${this.currentPlayer.type}`);\n    }\n\n    if (this.isGameOver()) {\n      this.endGame();\n      return result;\n    }\n\n    if (result === true || result === false) {\n      this.switchTurn();\n    }\n\n    return result;\n  }\n\n  /**\n   * Places specified ship for specified player starting at coordinates in specified direction\n   * @param {Player} player - The player whose ship to place\n   * @param {string} shipName - The name of ship to place (e.g., \"Carrier\", \"Battleship\")\n   * @param {number[]} coordinates - Starting coordinates [row, column] for ship placement\n   * @param {string} direction - Direction of ship placement (\"horizontal\" or \"vertical\")\n   * @returns {boolean} True if placement succeeds, false if placement fails\n   */\n  placePlayerShip(player, shipName, coordinates, direction) {\n    let unplacedShips = this.getUnplacedShips(player);\n    if (!unplacedShips.includes(shipName)) {\n      return false;\n    }\n\n    if (!SHIP_TYPES[shipName]) {\n      console.error(`Invalid Ship Type: ${shipName}`);\n      return false;\n    }\n\n    const ship = SHIP_TYPES[shipName]();\n    const success = player.gameBoard.placeShip(ship, coordinates, direction);\n\n    if (success) {\n      const index = unplacedShips.indexOf(shipName);\n      unplacedShips.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns an array of unplaced ships for a specific player\n   * @param {Player} player - The player whose unplaced ships to return\n   * @returns {string[]} Array of unplaced ship names\n   */\n  getUnplacedShips(player) {\n    if (player === this.player1) {\n      return this.player1UnplacedShips;\n    } else if (player === this.player2) {\n      return this.player2UnplacedShips;\n    } else {\n      throw new Error(\"Invalid Player.\");\n    }\n  }\n\n  resetPlayerShips(player) {\n    if (player === this.player1) {\n      player.gameBoard.resetGameBoard();\n      this.player1UnplacedShips = [...OG_UNPLACED_SHIPS];\n    } else if (player === this.player2) {\n      player.gameBoard.resetGameBoard();\n      this.player2UnplacedShips = [...OG_UNPLACED_SHIPS];\n    } else {\n      throw new Error(\"Invalid Player.\");\n    }\n  }\n\n  isPlayerSetupComplete(player) {\n    return this.getUnplacedShips(player).length === 0;\n  }\n\n  canStartGame() {\n    return this.isPlayerSetupComplete(this.player1) && this.isPlayerSetupComplete(this.player2);\n  }\n}\n\nexport { Game };\n","class GameBoard {\n  static BOARD_SIZE = 10;\n  static MAX_COORDINATE = 9;\n\n  constructor() {\n    this.initializeBoard();\n  }\n\n  initializeBoard() {\n    this.board = [];\n    for (let i = 0; i < GameBoard.BOARD_SIZE; i++) {\n      this.board[i] = [];\n      for (let j = 0; j < GameBoard.BOARD_SIZE; j++) {\n        this.board[i][j] = null;\n      }\n    }\n\n    this.misses = new Set();\n    this.hits = new Set();\n    this.ships = [];\n  }\n\n  resetGameBoard() {\n    this.initializeBoard();\n  }\n\n  /**\n   * Attempts to place a ship on the board at specified coordinates and direction\n   * @param {Ship} ship - The ship object to place\n   * @param {number[]} coordinates - Starting coordinates [row, column]\n   * @param {string} direction - Direction to place ship (\"horizontal\" or \"vertical\")\n   * @returns {boolean} True if placement succeeds, false if placement fails\n   */\n  placeShip(ship, coordinates, direction) {\n    const row = coordinates[0];\n    const column = coordinates[1];\n\n    if (row > GameBoard.MAX_COORDINATE || column > GameBoard.MAX_COORDINATE) {\n      return false;\n    }\n\n    if (direction === \"horizontal\" && column + ship.length > GameBoard.BOARD_SIZE) {\n      return false;\n    }\n\n    if (direction === \"vertical\" && row + ship.length > GameBoard.BOARD_SIZE) {\n      return false;\n    }\n\n    for (let i = 0; i < ship.length; i++) {\n      if (direction === \"horizontal\") {\n        if (this.board[row][column + i] !== null) {\n          return false;\n        }\n      } else if (direction === \"vertical\") {\n        if (this.board[row + i][column] !== null) {\n          return false;\n        }\n      }\n    }\n\n    this.ships.push(ship);\n\n    for (let i = 0; i < ship.length; i++) {\n      if (direction === \"horizontal\") {\n        this.board[row][column + i] = ship;\n      } else if (direction === \"vertical\") {\n        this.board[row + i][column] = ship;\n      }\n    }\n    return true;\n  }\n\n  getShipAt(coordinates) {\n    const row = coordinates[0];\n    const column = coordinates[1];\n\n    if (\n      row < 0 ||\n      row > GameBoard.MAX_COORDINATE ||\n      column < 0 ||\n      column > GameBoard.MAX_COORDINATE\n    ) {\n      console.error(`Invalid coordinates: [${row}, ${column}]`);\n      return null;\n    }\n\n    return this.board[row][column];\n  }\n\n  /**\n   * Processes an attack at the specified coordinates and determines the outcome\n   * @param {number[]} coordinates - Attack coordinates [row, column]\n   * @returns {boolean|string} True for hit, false for miss, \"already-attacked\" if square was\n   * previously attacked, \"invalid-coordinates\" if out of bounds\n   */\n  receiveAttack(coordinates) {\n    const row = coordinates[0];\n    const column = coordinates[1];\n\n    if (\n      row < 0 ||\n      row > GameBoard.MAX_COORDINATE ||\n      column < 0 ||\n      column > GameBoard.MAX_COORDINATE\n    ) {\n      console.error(`Invalid coordinates: [${row}, ${column}]`);\n      return \"invalid-coordinates\";\n    }\n\n    const stringCoordinate = `${row},${column}`;\n    if (this.hits.has(stringCoordinate) || this.misses.has(stringCoordinate)) {\n      return \"already-attacked\";\n    }\n\n    if (this.board[row][column] === null) {\n      this.misses.add(`${row},${column}`);\n      return false;\n    } else {\n      this.board[row][column].hit();\n      this.hits.add(`${row},${column}`);\n      return true;\n    }\n  }\n\n  /**\n   * Determines whether all ships on the board have sunk\n   * @returns {boolean} True if all ships sunk, false if any ship remains\n   */\n  allShipsSunk() {\n    if (this.ships.length === 0) {\n      return false;\n    }\n\n    const allShipsSunk = this.ships.every((ship) => {\n      return ship.isSunk();\n    });\n\n    return allShipsSunk;\n  }\n}\n\nexport { GameBoard };\n","import { GameBoard } from \"./GameBoard.js\";\n\nclass Player {\n  static BOARD_SIZE = 10;\n  static MAX_COORDINATE = 9;\n  static TOTAL_SQUARES = 100;\n\n  constructor(type) {\n    this.type = type;\n    this.gameBoard = new GameBoard();\n    this.computerAttackQueue = [];\n    this.computerAttackMode = \"random\";\n    this.computerLockedDirection = \"\";\n    this.computerCurrentTargetHits = [];\n  }\n\n  /**\n   * Generates and executes a computer attack on the opponent's board\n   * @param {GameBoard} opponentBoard - The opponent's game board to attack\n   * @returns {Object} Attack result containing result and coordinates\n   * @property {boolean|string} result - True for hit, false for miss, \"already-attacked\" if\n   * previously attacked, \"invalid-coordinates\" if out of bounds\n   * @property {number[]} coordinates - Attack coordinates [row, column]\n   */\n  computerAttack(opponentBoard) {\n    if (opponentBoard.misses.size + opponentBoard.hits.size === Player.TOTAL_SQUARES) {\n      throw new Error(\"Cannot Attack: All Squares Attacked. Game Should Have Ended.\");\n    }\n\n    if (this.computerAttackQueue.length !== 0) {\n      let coordinates;\n\n      do {\n        coordinates = this.computerAttackQueue.shift();\n      } while (\n        coordinates &&\n        (opponentBoard.hits.has(`${coordinates[0]},${coordinates[1]}`) ||\n          opponentBoard.misses.has(`${coordinates[0]},${coordinates[1]}`))\n      );\n\n      if (coordinates) {\n        const result = opponentBoard.receiveAttack(coordinates);\n        return { result: result, coordinates: coordinates };\n      }\n    }\n\n    let result;\n    let coordinates = [];\n\n    do {\n      const randomRow = Math.floor(Math.random() * Player.BOARD_SIZE);\n      const randomColumn = Math.floor(Math.random() * Player.BOARD_SIZE);\n\n      result = opponentBoard.receiveAttack([randomRow, randomColumn]);\n      coordinates = [randomRow, randomColumn];\n    } while (result !== true && result !== false);\n\n    return { result: result, coordinates: coordinates };\n  }\n\n  /**\n   * Updates the computer's attack strategy based on the result of the previous attack\n   * @param {boolean} result - Attack result (true for hit, false for miss)\n   * @param {number[]} coordinates - Coordinates [row, column] of the attack\n   * @param {GameBoard} opponentBoard - The opponent's game board\n   * @returns {void}\n   */\n  updateComputerAttackStrategy(result, coordinates, opponentBoard) {\n    if (result === true) {\n      this.computerCurrentTargetHits.push(coordinates);\n\n      const ship = opponentBoard.getShipAt(coordinates);\n\n      if (ship && ship.isSunk()) {\n        this.computerAttackQueue.length = 0;\n        this.computerAttackMode = \"random\";\n        this.computerLockedDirection = \"\";\n        this.computerCurrentTargetHits.length = 0;\n        return;\n      }\n\n      if (this.computerAttackMode === \"locked\") {\n        this.computerAttackQueue.length = 0;\n\n        if (this.computerLockedDirection === \"horizontal\") {\n          const row = this.computerCurrentTargetHits[0][0];\n          const columns = this.computerCurrentTargetHits\n            .filter((hit) => hit[0] === row)\n            .map((hit) => hit[1]);\n\n          const minColumn = Math.min(...columns);\n          const maxColumn = Math.max(...columns);\n\n          if (minColumn - 1 >= 0) {\n            this.computerAttackQueue.push([row, minColumn - 1]);\n          }\n          if (maxColumn + 1 <= Player.MAX_COORDINATE) {\n            this.computerAttackQueue.push([row, maxColumn + 1]);\n          }\n        } else if (this.computerLockedDirection === \"vertical\") {\n          const column = this.computerCurrentTargetHits[0][1];\n          const rows = this.computerCurrentTargetHits\n            .filter((hit) => hit[1] === column)\n            .map((hit) => hit[0]);\n\n          const minRow = Math.min(...rows);\n          const maxRow = Math.max(...rows);\n\n          if (minRow - 1 >= 0) {\n            this.computerAttackQueue.push([minRow - 1, column]);\n          }\n          if (maxRow + 1 <= Player.MAX_COORDINATE) {\n            this.computerAttackQueue.push([maxRow + 1, column]);\n          }\n        }\n        return;\n      }\n\n      if (this.computerCurrentTargetHits.length >= 2 && this.computerAttackMode === \"target\") {\n        const lastHit = this.computerCurrentTargetHits[this.computerCurrentTargetHits.length - 1];\n\n        const secondLastHit =\n          this.computerCurrentTargetHits[this.computerCurrentTargetHits.length - 2];\n\n        if (\n          lastHit[0] === secondLastHit[0] &&\n          (lastHit[1] - secondLastHit[1] === 1 || lastHit[1] - secondLastHit[1] === -1)\n        ) {\n          this.computerAttackMode = \"locked\";\n          this.computerLockedDirection = \"horizontal\";\n          this.computerAttackQueue.length = 0;\n          const row = lastHit[0];\n          const columns = this.computerCurrentTargetHits\n            .filter((hit) => hit[0] === row)\n            .map((hit) => hit[1]);\n\n          const minColumn = Math.min(...columns);\n          const maxColumn = Math.max(...columns);\n\n          if (minColumn - 1 >= 0) {\n            this.computerAttackQueue.push([row, minColumn - 1]);\n          }\n          if (maxColumn + 1 <= Player.MAX_COORDINATE) {\n            this.computerAttackQueue.push([row, maxColumn + 1]);\n          }\n        } else if (\n          lastHit[1] === secondLastHit[1] &&\n          (lastHit[0] - secondLastHit[0] === 1 || lastHit[0] - secondLastHit[0] === -1)\n        ) {\n          this.computerAttackMode = \"locked\";\n          this.computerLockedDirection = \"vertical\";\n          this.computerAttackQueue.length = 0;\n          const column = lastHit[1];\n          const rows = this.computerCurrentTargetHits\n            .filter((hit) => hit[1] === column)\n            .map((hit) => hit[0]);\n\n          const minRow = Math.min(...rows);\n          const maxRow = Math.max(...rows);\n\n          if (minRow - 1 >= 0) {\n            this.computerAttackQueue.push([minRow - 1, column]);\n          }\n          if (maxRow + 1 <= Player.MAX_COORDINATE) {\n            this.computerAttackQueue.push([maxRow + 1, column]);\n          }\n        }\n      } else {\n        this.computerAttackMode = \"target\";\n\n        const attackedRow = coordinates[0];\n        const attackedColumn = coordinates[1];\n\n        if (attackedRow - 1 >= 0) {\n          this.computerAttackQueue.push([attackedRow - 1, attackedColumn]);\n        }\n        if (attackedRow + 1 <= Player.MAX_COORDINATE) {\n          this.computerAttackQueue.push([attackedRow + 1, attackedColumn]);\n        }\n        if (attackedColumn - 1 >= 0) {\n          this.computerAttackQueue.push([attackedRow, attackedColumn - 1]);\n        }\n        if (attackedColumn + 1 <= Player.MAX_COORDINATE) {\n          this.computerAttackQueue.push([attackedRow, attackedColumn + 1]);\n        }\n      }\n    }\n  }\n}\n\nexport { Player };\n","class ShipPlacementController {\n  static BOARD_SIZE = 10;\n  static MAX_COORDINATE = 9;\n\n  constructor(game, renderer) {\n    this.game = game;\n    this.renderer = renderer;\n    this.currentDragData = null;\n    this.callbacks = {};\n    this.rotateDraggableShipsSetup = false;\n  }\n\n  /**\n   * Sets up drag and drop functionality for ship placement on game board\n   * @param {HTMLElement} gameBoard - Game board DOM element\n   * @param {Player} player - The player whose board is being set up for placement\n   * @param {Object} callbacks - Optional callbacks for ship placement events\n   * @param {Function} callbacks.onShipPlaced - Called on successful ship placement\n   * @returns {void}\n   */\n  setUpDragAndDrop(gameBoard, player, callbacks = {}) {\n    if (!gameBoard) {\n      console.error(\"Game Board Not Found For Drag And Drop Setup\");\n      return;\n    }\n    this.callbacks = callbacks;\n\n    if (!this.rotateDraggableShipsSetup) {\n      const draggableShips = document.querySelectorAll(\".draggable-ship\");\n\n      if (draggableShips.length === 0) {\n        console.error(\"No Draggable Ships Found For Rotation Setup\");\n        return;\n      }\n\n      draggableShips.forEach((ship) => {\n        ship.addEventListener(\"contextmenu\", (event) => {\n          event.preventDefault();\n          this.rotateDraggableShip(event.target);\n        });\n      });\n      this.rotateDraggableShipsSetup = true;\n    }\n\n    const draggableShips = document.querySelectorAll(\".draggable-ship\");\n\n    if (draggableShips.length === 0) {\n      console.error(\"No Draggable Ships Found\");\n      return;\n    }\n\n    draggableShips.forEach((ship) => {\n      ship.addEventListener(\"dragstart\", (event) => {\n        this.handleDragStart(event);\n      });\n      ship.addEventListener(\"dragend\", (event) => {\n        this.handleDragEnd(event);\n      });\n    });\n\n    const boardSquares = gameBoard.querySelectorAll(\".game-board-square\");\n\n    if (boardSquares.length === 0) {\n      console.error(\"No Squares Found On Game Board For Drag And Drop\");\n      return;\n    }\n\n    boardSquares.forEach((square) => {\n      square.addEventListener(\"dragover\", (event) => {\n        this.handleDragOver(event, gameBoard, player);\n      });\n      square.addEventListener(\"dragenter\", (event) => {\n        event.preventDefault();\n      });\n      square.addEventListener(\"drop\", (event) => {\n        this.handleDrop(event, gameBoard, player);\n      });\n    });\n  }\n\n  handleDragStart(event) {\n    const shipType = event.target.dataset.shipType;\n    const shipLength = parseInt(event.target.dataset.length);\n    const direction = event.target.dataset.direction || \"horizontal\";\n\n    const shipData = {\n      shipType: shipType,\n      length: shipLength,\n      direction: direction,\n    };\n\n    event.dataTransfer.setData(\"application/json\", JSON.stringify(shipData));\n    this.currentDragData = shipData;\n    event.target.classList.add(\"dragging\");\n  }\n\n  handleDragEnd(event) {\n    event.target.classList.remove(\"dragging\");\n    this.clearPlacementPreview();\n    this.currentDragData = null;\n  }\n\n  handleDragOver(event, gameBoard, player) {\n    event.preventDefault();\n\n    if (!this.currentDragData) {\n      return;\n    }\n\n    const shipData = this.currentDragData;\n    const row = parseInt(event.target.dataset.row);\n    const column = parseInt(event.target.dataset.column);\n\n    this.showPlacementPreview(gameBoard, row, column, shipData.length, shipData.direction);\n  }\n\n  handleDrop(event, gameBoard, player) {\n    event.preventDefault();\n\n    const data = event.dataTransfer.getData(\"application/json\");\n    if (!data) {\n      return;\n    }\n\n    const shipData = JSON.parse(data);\n    const row = parseInt(event.target.dataset.row);\n    const column = parseInt(event.target.dataset.column);\n\n    const success = this.game.placePlayerShip(\n      player,\n      shipData.shipType,\n      [row, column],\n      shipData.direction,\n    );\n\n    if (success) {\n      this.renderer.updateGameBoard(gameBoard, player, true);\n      this.notifyShipPlaced(player);\n    }\n\n    this.clearPlacementPreview();\n  }\n\n  /**\n   * Randomly places all unplaced ships on the specified player's game board\n   * @param {Player} player - The player whose game board will have ships placed on it\n   * @returns {void}\n   */\n  randomlyPlaceShips(player) {\n    while (this.game.getUnplacedShips(player).length > 0) {\n      const remainingShips = this.game.getUnplacedShips(player);\n      const ship = remainingShips[0];\n\n      let placementResult;\n      do {\n        const randomRow = Math.floor(Math.random() * ShipPlacementController.BOARD_SIZE);\n        const randomColumn = Math.floor(Math.random() * ShipPlacementController.BOARD_SIZE);\n        const coordinates = [randomRow, randomColumn];\n        const randomDirection = Math.random() < 0.5 ? \"horizontal\" : \"vertical\";\n        placementResult = this.game.placePlayerShip(player, ship, coordinates, randomDirection);\n      } while (placementResult !== true);\n    }\n  }\n\n  resetPlayerShips(player) {\n    this.game.resetPlayerShips(player);\n  }\n\n  rotateDraggableShip(shipElement) {\n    let currentDirection = shipElement.dataset.direction || \"horizontal\";\n\n    const newDirection = currentDirection === \"horizontal\" ? \"vertical\" : \"horizontal\";\n\n    shipElement.dataset.direction = newDirection;\n\n    const visual = shipElement.querySelector(\".draggable-ship-visual\");\n    if (visual) {\n      if (newDirection === \"vertical\") {\n        visual.classList.add(\"vertical\");\n      } else {\n        visual.classList.remove(\"vertical\");\n      }\n    }\n  }\n\n  /**\n   * Shows a visual preview of where ship would be placed on game board\n   * @param {HTMLElement} gameBoard - Game board DOM element\n   * @param {number} row - The starting row coordinate for ship placement\n   * @param {number} column - The starting column coordinate for ship placement\n   * @param {number} length - Length of the ship to be placed\n   * @param {string} direction - Direction of ship placement (\"horizontal\" or \"vertical\")\n   * @returns {void}\n   */\n  showPlacementPreview(gameBoard, row, column, length, direction) {\n    this.clearPlacementPreview();\n\n    const boardSquares = gameBoard.querySelectorAll(\".game-board-square\");\n    if (boardSquares.length === 0) {\n      return;\n    }\n\n    const previewSquares = [];\n\n    for (let i = 0; i < length; i++) {\n      const targetRow = direction === \"horizontal\" ? row : row + i;\n      const targetColumn = direction === \"vertical\" ? column : column + i;\n\n      if (\n        targetRow >= 0 &&\n        targetRow <= ShipPlacementController.MAX_COORDINATE &&\n        targetColumn >= 0 &&\n        targetColumn <= ShipPlacementController.MAX_COORDINATE\n      ) {\n        const targetSquareIndex = targetRow * ShipPlacementController.BOARD_SIZE + targetColumn;\n        const targetSquare = boardSquares[targetSquareIndex];\n        previewSquares.push(targetSquare);\n      }\n    }\n\n    let isValidPlacement = previewSquares.length === length;\n\n    for (const square of previewSquares) {\n      if (\n        square.classList.contains(\"ship\") ||\n        square.classList.contains(\"hit\") ||\n        square.classList.contains(\"miss\")\n      ) {\n        isValidPlacement = false;\n        break;\n      }\n    }\n\n    const cssClass = isValidPlacement ? \"valid-drop-preview\" : \"invalid-drop-preview\";\n\n    previewSquares.forEach((square) => {\n      square.classList.add(cssClass);\n    });\n  }\n\n  clearPlacementPreview() {\n    const boardSquares = document.querySelectorAll(\".game-board-square\");\n    boardSquares.forEach((square) => {\n      square.classList.remove(\"valid-drop-preview\", \"invalid-drop-preview\");\n    });\n  }\n\n  notifyShipPlaced(player) {\n    if (this.callbacks.onShipPlaced) {\n      this.callbacks.onShipPlaced(player);\n    }\n  }\n}\n\nexport { ShipPlacementController };\n","import { Game } from \"./Game.js\";\nimport { Player } from \"./Player.js\";\nimport { ShipPlacementController } from \"./ShipPlacementController.js\";\n\nclass GameController {\n  static PLAYER_TURN_DELAY_MS = 2000;\n  static COMPUTER_TURN_DELAY_MS = 1000;\n  static ASCII_OFFSET_A = 65;\n\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.game = null;\n    this.shipPlacementController = null;\n    this.player1GameBoard = null;\n    this.player2GameBoard = null;\n    this.phase = \"setup\";\n    this.squareEventListenersController = null;\n    this.gameMode = null;\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Initializes the game by creating game boards, setting up UI controls, and\n   * preparing event listeners\n   * @returns {void}\n   */\n  initializeGame() {\n    this.player1GameBoard = this.renderer.createGameBoard();\n    this.player2GameBoard = this.renderer.createGameBoard();\n\n    const leftBoard = document.querySelector(\"#left-board\");\n    const rightBoard = document.querySelector(\"#right-board\");\n\n    if (!leftBoard || !rightBoard) {\n      throw new Error(\"Critical Game Board Container Missing - Cannot Initialize\");\n    }\n\n    leftBoard.appendChild(this.player1GameBoard);\n    rightBoard.appendChild(this.player2GameBoard);\n\n    this.setUpModeSelection();\n  }\n\n  initializeGameLogic() {\n    this.renderer.updateGameBoard(this.player1GameBoard, this.game.player1, true);\n    this.renderer.updateGameBoard(this.player2GameBoard, this.game.player2, false);\n\n    this.populateLeftBoardShipDropdown();\n    this.populateRightBoardShipDropdown();\n    this.setUpShipPlacementButtons();\n\n    const shipPlacementCallbacks = {\n      onShipPlaced: (player) => {\n        if (player === this.game.player1) {\n          this.populateLeftBoardShipDropdown();\n        } else if (player === this.game.player2) {\n          this.populateRightBoardShipDropdown();\n        }\n\n        this.clearPlacementErrors();\n      },\n    };\n\n    this.shipPlacementController.setUpDragAndDrop(\n      this.player1GameBoard,\n      this.game.player1,\n      shipPlacementCallbacks,\n    );\n\n    this.shipPlacementController.setUpDragAndDrop(\n      this.player2GameBoard,\n      this.game.player2,\n      shipPlacementCallbacks,\n    );\n\n    this.setUpStartGameButtons();\n    this.setUpPlayingGameButtons();\n    this.setUpPassDeviceButton();\n    this.updateGameStatusMessage();\n  }\n\n  createGameWithMode(mode) {\n    this.gameMode = mode;\n    const player1 = new Player(\"real\");\n    const player2 = new Player(mode === \"pve\" ? \"computer\" : \"real\");\n    this.game = new Game(player1, player2);\n    this.shipPlacementController = new ShipPlacementController(this.game, this.renderer);\n    this.initializeGameLogic();\n  }\n\n  startPlayingPhase() {\n    this.phase = \"playing\";\n\n    if (this.gameMode === \"pve\") {\n      this.addSquareEventListeners(\n        this.player1GameBoard,\n        this.game.player1,\n        this.player2GameBoard,\n        this.game.player2,\n      );\n    } else if (this.gameMode === \"pvp\") {\n      this.addSquareEventListenersForPvP(\n        this.player1GameBoard,\n        this.game.player1,\n        this.player2GameBoard,\n        this.game.player2,\n      );\n    }\n\n    this.renderer.updateGameBoard(this.player2GameBoard, this.game.player2, false);\n\n    const shipPlacementContainer = document.querySelector(\"#ship-placement-container\");\n    const startGameButtonsContainer = document.querySelector(\"#start-game-buttons-container\");\n    const playingGameButtonsContainer = document.querySelector(\"#playing-game-buttons-container\");\n\n    if (!shipPlacementContainer || !startGameButtonsContainer || !playingGameButtonsContainer) {\n      console.error(\"UI Container Not Found When Starting Playing Phase.\");\n      return;\n    }\n\n    shipPlacementContainer.classList.add(\"hidden\");\n    startGameButtonsContainer.classList.add(\"hidden\");\n    playingGameButtonsContainer.classList.remove(\"hidden\");\n    this.updateGameStatusMessage();\n  }\n\n  startNewGame() {\n    this.phase = \"setup\";\n\n    this.removeSquareEventListeners();\n\n    this.shipPlacementController.resetPlayerShips(this.game.player1);\n    this.shipPlacementController.resetPlayerShips(this.game.player2);\n\n    this.game.currentPlayer = this.game.player1;\n    this.game.opponent = this.game.player2;\n    this.game.gameState = \"running\";\n    this.game.winner = null;\n\n    const shipPlacementContainer = document.querySelector(\"#ship-placement-container\");\n    const startGameButtonsContainer = document.querySelector(\"#start-game-buttons-container\");\n    const playingGameButtonsContainer = document.querySelector(\"#playing-game-buttons-container\");\n\n    if (!shipPlacementContainer || !startGameButtonsContainer || !playingGameButtonsContainer) {\n      console.error(\"UI Container Not Found When Starting New Game.\");\n      return;\n    }\n\n    shipPlacementContainer.classList.remove(\"hidden\");\n    startGameButtonsContainer.classList.remove(\"hidden\");\n    playingGameButtonsContainer.classList.add(\"hidden\");\n\n    this.renderer.updateGameBoard(this.player1GameBoard, this.game.player1, true);\n\n    this.renderer.updateGameBoard(this.player2GameBoard, this.game.player2, false);\n\n    this.populateLeftBoardShipDropdown();\n    this.populateRightBoardShipDropdown();\n    this.clearPlacementErrors();\n    this.updateGameStatusMessage();\n  }\n\n  setUpModeSelection() {\n    const PVEButton = document.querySelector(\"#pve-selection-button\");\n    const PVPButton = document.querySelector(\"#pvp-selection-button\");\n    const modeSelectionContainer = document.querySelector(\"#mode-selection-container\");\n    const shipPlacementContainer = document.querySelector(\"#ship-placement-container\");\n    const startGameButtonsContainer = document.querySelector(\"#start-game-buttons-container\");\n    const quickStartButtonContainer = document.querySelector(\"#quick-start-button-container\");\n\n    if (\n      !PVEButton ||\n      !PVPButton ||\n      !modeSelectionContainer ||\n      !shipPlacementContainer ||\n      !startGameButtonsContainer ||\n      !quickStartButtonContainer\n    ) {\n      console.error(\"Mode Selection Button or UI Container Not Found During Mode Selection Set Up\");\n      return;\n    }\n\n    PVEButton.addEventListener(\"click\", () => {\n      this.createGameWithMode(\"pve\");\n      modeSelectionContainer.classList.add(\"hidden\");\n      shipPlacementContainer.classList.remove(\"hidden\");\n      startGameButtonsContainer.classList.remove(\"hidden\");\n      quickStartButtonContainer.classList.remove(\"hidden\");\n    });\n\n    PVPButton.addEventListener(\"click\", () => {\n      this.createGameWithMode(\"pvp\");\n      modeSelectionContainer.classList.add(\"hidden\");\n      shipPlacementContainer.classList.remove(\"hidden\");\n      startGameButtonsContainer.classList.remove(\"hidden\");\n      quickStartButtonContainer.classList.add(\"hidden\");\n    });\n  }\n\n  setUpShipPlacementButtons() {\n    const leftBoardRandomPlacementButton = document.querySelector(\n      \"#left-board-random-placement-button\",\n    );\n    leftBoardRandomPlacementButton.addEventListener(\"click\", () => {\n      this.shipPlacementController.resetPlayerShips(this.game.player1);\n      this.shipPlacementController.randomlyPlaceShips(this.game.player1);\n      this.populateLeftBoardShipDropdown();\n      this.renderer.updateGameBoard(this.player1GameBoard, this.game.player1, true);\n      this.clearPlacementErrors();\n    });\n\n    const leftBoardResetPlacementButton = document.querySelector(\n      \"#left-board-reset-placement-button\",\n    );\n    leftBoardResetPlacementButton.addEventListener(\"click\", () => {\n      this.shipPlacementController.resetPlayerShips(this.game.player1);\n      this.populateLeftBoardShipDropdown();\n      this.renderer.updateGameBoard(this.player1GameBoard, this.game.player1, true);\n      this.clearPlacementErrors();\n    });\n\n    const rightBoardRandomPlacementButton = document.querySelector(\n      \"#right-board-random-placement-button\",\n    );\n    rightBoardRandomPlacementButton.addEventListener(\"click\", () => {\n      this.shipPlacementController.resetPlayerShips(this.game.player2);\n      this.shipPlacementController.randomlyPlaceShips(this.game.player2);\n      this.populateRightBoardShipDropdown();\n      this.renderer.updateGameBoard(this.player2GameBoard, this.game.player2, true);\n      this.clearPlacementErrors();\n    });\n\n    const rightBoardResetPlacementButton = document.querySelector(\n      \"#right-board-reset-placement-button\",\n    );\n    rightBoardResetPlacementButton.addEventListener(\"click\", () => {\n      this.shipPlacementController.resetPlayerShips(this.game.player2);\n      this.populateRightBoardShipDropdown();\n      this.renderer.updateGameBoard(this.player2GameBoard, this.game.player2, true);\n      this.clearPlacementErrors();\n    });\n\n    this.handleManualPlacementButton(true);\n    this.handleManualPlacementButton(false);\n  }\n\n  setUpStartGameButtons() {\n    const startGameButton = document.querySelector(\"#start-game-button\");\n    const quickStartButton = document.querySelector(\"#quick-start-button\");\n    const startGameButtonsError = document.querySelector(\"#start-game-buttons-error\");\n\n    if (!startGameButton || !quickStartButton || !startGameButtonsError) {\n      console.error(\"Start Game Button Or Error Element Not Found.\");\n      return;\n    }\n\n    startGameButton.addEventListener(\"click\", () => {\n      if (this.game.canStartGame()) {\n        startGameButtonsError.textContent = \"\";\n        this.startPlayingPhase();\n      } else {\n        startGameButtonsError.textContent = \"Please place all ships on both boards.\";\n        return;\n      }\n    });\n\n    quickStartButton.addEventListener(\"click\", () => {\n      if (this.game.isPlayerSetupComplete(this.game.player1)) {\n        this.shipPlacementController.resetPlayerShips(this.game.player2);\n        this.shipPlacementController.randomlyPlaceShips(this.game.player2);\n        if (this.game.canStartGame()) {\n          startGameButtonsError.textContent = \"\";\n          this.startPlayingPhase();\n        }\n      } else {\n        startGameButtonsError.textContent = \"Please place all ships on your board.\";\n        return;\n      }\n    });\n  }\n\n  setUpPlayingGameButtons() {\n    const startNewGameButton = document.querySelector(\"#start-new-game-button\");\n\n    if (!startNewGameButton) {\n      console.error(\"Start New Game Button Not Found.\");\n      return;\n    }\n\n    startNewGameButton.addEventListener(\"click\", () => {\n      this.startNewGame();\n    });\n  }\n\n  /**\n   * Sets up event listeners for manual placement button for a specific board\n   * @param {boolean} isLeftBoard - True for left board, false for right board\n   * @returns {void}\n   */\n  handleManualPlacementButton(isLeftBoard) {\n    const boardSide = isLeftBoard ? \"left\" : \"right\";\n    const player = isLeftBoard ? this.game.player1 : this.game.player2;\n    const gameBoard = isLeftBoard ? this.player1GameBoard : this.player2GameBoard;\n\n    const dropdown = document.querySelector(`#${boardSide}-board-manual-ship-dropdown`);\n    const coordinatesInput = document.querySelector(`#${boardSide}-board-manual-coordinates-input`);\n    const button = document.querySelector(`#${boardSide}-board-manual-placement-button`);\n    const errorElement = document.querySelector(`#${boardSide}-board-manual-placement-error`);\n\n    if (!dropdown || !coordinatesInput || !button || !errorElement) {\n      console.error(`Manual Placement Element Missing For ${boardSide} Board.`);\n      return;\n    }\n\n    button.addEventListener(\"click\", () => {\n      const directionInput = document.querySelector(\n        `input[name=\"${boardSide}-board-manual-direction-input\"]:checked`,\n      );\n\n      if (!directionInput) {\n        console.error(`Direction Input Missing For ${boardSide} Board.`);\n        return;\n      }\n\n      const coordinatesInputValue = coordinatesInput.value;\n      const coordinates = this.parseCoordinates(coordinatesInputValue);\n      if (coordinates === null) {\n        errorElement.textContent = \"Invalid Coordinates. Please Enter A1-J10.\";\n        return;\n      }\n\n      const ship = dropdown.value;\n      const direction = directionInput.value;\n\n      const success = this.game.placePlayerShip(player, ship, coordinates, direction);\n\n      if (success) {\n        this.renderer.updateGameBoard(gameBoard, player, true);\n        if (isLeftBoard) {\n          this.populateLeftBoardShipDropdown();\n        } else {\n          this.populateRightBoardShipDropdown();\n        }\n\n        coordinatesInput.value = \"\";\n        errorElement.textContent = \"\";\n      } else {\n        errorElement.textContent = \"Ship Cannot Be Placed There.\";\n      }\n    });\n  }\n\n  /**\n   * Sets up click event listeners on opponent's board squares to handle player\n   * attacks and computer counterattack\n   * @param {HTMLElement} playerBoard - The current player's board (for\n   * computer counterattack)\n   * @param {Player} player - The current player\n   * @param {HTMLElement} opponentBoard - The opponent's board (where event\n   * listeners are attached to squares)\n   * @param {Player} opponent - The opponent player\n   */\n  addSquareEventListeners(playerBoard, player, opponentBoard, opponent) {\n    this.squareEventListenersController = new AbortController();\n    const squares = opponentBoard.querySelectorAll(\".game-board-square\");\n\n    squares.forEach((square) => {\n      square.addEventListener(\n        \"click\",\n        () => {\n          if (this.game.gameState === \"ended\") {\n            return;\n          }\n\n          if (this.game.currentPlayer.type !== \"real\") {\n            return;\n          }\n\n          const row = parseInt(square.dataset.row);\n          const column = parseInt(square.dataset.column);\n          const coordinates = [row, column];\n\n          const result = this.game.processTurn(coordinates);\n\n          if (result === \"already-attacked\") {\n            return;\n          } else {\n            this.renderer.updateOpponentGameBoard(opponentBoard, opponent);\n            this.updateGameStatusMessage();\n            setTimeout(() => {\n              this.handleComputerTurn(playerBoard, player);\n              this.updateGameStatusMessage();\n            }, GameController.COMPUTER_TURN_DELAY_MS);\n          }\n        },\n        { signal: this.squareEventListenersController.signal },\n      );\n    });\n  }\n\n  addSquareEventListenersForPvP(player1Board, player1, player2Board, player2) {\n    this.squareEventListenersController = new AbortController();\n    const squares = document.querySelectorAll(\".game-board-square\");\n\n    squares.forEach((square) => {\n      square.addEventListener(\n        \"click\",\n        () => {\n          if (this.game.gameState === \"ended\") {\n            return;\n          }\n\n          if (this.isTransitioning) {\n            return;\n          }\n\n          const isLeftBoard = square.closest(\"#left-board\") !== null;\n          const isRightBoard = square.closest(\"#right-board\") !== null;\n\n          if (this.game.currentPlayer === player1 && isLeftBoard) {\n            return;\n          }\n          if (this.game.currentPlayer === player2 && isRightBoard) {\n            return;\n          }\n\n          const row = parseInt(square.dataset.row);\n          const column = parseInt(square.dataset.column);\n          const coordinates = [row, column];\n\n          const result = this.game.processTurn(coordinates);\n\n          if (result === \"already-attacked\") {\n            return;\n          } else {\n            this.isTransitioning = true;\n            if (this.game.currentPlayer === this.game.player1) {\n              this.renderer.updateOpponentGameBoard(this.player1GameBoard, this.game.player1);\n            } else if (this.game.currentPlayer === this.game.player2) {\n              this.renderer.updateOpponentGameBoard(this.player2GameBoard, this.game.player2);\n            }\n\n            this.updateGameStatusMessage();\n            setTimeout(() => {\n              this.showPassDeviceScreen();\n            }, GameController.PLAYER_TURN_DELAY_MS);\n          }\n        },\n        { signal: this.squareEventListenersController.signal },\n      );\n    });\n  }\n\n  setUpPassDeviceButton() {\n    const passDeviceContinueButton = document.querySelector(\"#pass-device-continue-button\");\n\n    if (!passDeviceContinueButton) {\n      console.error(\"Pass Device Continue Button Not Found.\");\n      return;\n    }\n\n    passDeviceContinueButton.addEventListener(\"click\", () => {\n      if (this.game.currentPlayer === this.game.player1) {\n        this.renderer.updatePlayerGameBoard(this.player1GameBoard, this.game.player1);\n        this.renderer.updateOpponentGameBoard(this.player2GameBoard, this.game.player2);\n      } else if (this.game.currentPlayer === this.game.player2) {\n        this.renderer.updatePlayerGameBoard(this.player2GameBoard, this.game.player2);\n        this.renderer.updateOpponentGameBoard(this.player1GameBoard, this.game.player1);\n      }\n\n      this.hideDeviceScreen();\n      this.isTransitioning = false;\n    });\n  }\n\n  showPassDeviceScreen() {\n    const passDeviceScreen = document.querySelector(\"#pass-device-screen\");\n    const passDeviceMessage = document.querySelector(\"#pass-device-message\");\n\n    if (!passDeviceScreen || !passDeviceMessage) {\n      console.error(\"Pass Device Screen Element Not Found\");\n      return;\n    }\n\n    if (this.game.currentPlayer === this.game.player1) {\n      passDeviceMessage.textContent = \"It Is Player 1's Turn. Please Continue When Ready.\";\n    } else if (this.game.currentPlayer === this.game.player2) {\n      passDeviceMessage.textContent = \"It Is Player 2's Turn. Please Continue When Ready.\";\n    }\n\n    passDeviceScreen.classList.remove(\"hidden\");\n  }\n\n  hideDeviceScreen() {\n    const passDeviceScreen = document.querySelector(\"#pass-device-screen\");\n\n    if (!passDeviceScreen) {\n      console.error(\"Pass Device Screen Element Not Found\");\n      return;\n    }\n\n    passDeviceScreen.classList.add(\"hidden\");\n  }\n\n  removeSquareEventListeners() {\n    this.squareEventListenersController?.abort();\n    this.squareEventListenersController = null;\n  }\n\n  handleComputerTurn(playerBoard, player) {\n    if (this.game.gameState === \"ended\") {\n      return;\n    }\n\n    if (this.game.currentPlayer.type !== \"computer\") {\n      return;\n    }\n\n    const result = this.game.processTurn();\n    if (result === \"already-attacked\") {\n      return;\n    } else {\n      this.renderer.updatePlayerGameBoard(playerBoard, player);\n    }\n  }\n\n  updateGameStatusMessage() {\n    const gameStatusMessage = document.querySelector(\"#game-status-message\");\n\n    if (this.phase === \"setup\" && this.game.gameState === \"running\") {\n      gameStatusMessage.textContent = \"Please Place Ships.\";\n    } else if (this.game.gameState === \"ended\") {\n      if (this.gameMode === \"pvp\") {\n        const winnerNumber = this.game.winner === this.game.player1 ? \"1\" : \"2\";\n        gameStatusMessage.textContent = `Game Over! Player ${winnerNumber} Won`;\n      } else {\n        const winnerType = this.game.winner.type === \"real\" ? \"You\" : \"The Computer\";\n        gameStatusMessage.textContent = `Game Over! ${winnerType} Won`;\n      }\n    } else {\n      if (this.gameMode === \"pvp\") {\n        const currentPlayerNumber = this.game.currentPlayer === this.game.player1 ? \"1\" : \"2\";\n        gameStatusMessage.textContent = `It Is Player ${currentPlayerNumber}'s Turn`;\n      } else {\n        const currentPlayerType = this.game.currentPlayer.type === \"real\" ? \"Your\" : \"Computer's\";\n        gameStatusMessage.textContent = `It Is ${currentPlayerType} Turn`;\n      }\n    }\n  }\n\n  /**\n   * Populates dropdown with ships available to place and manages state of\n   * manual placement button for a specific board\n   * @param {boolean} isLeftBoard - True for left board, false for right board\n   * @returns {void}\n   */\n  populateShipDropdown(isLeftBoard) {\n    const boardSide = isLeftBoard ? \"left\" : \"right\";\n    const player = isLeftBoard ? this.game.player1 : this.game.player2;\n\n    const dropdown = document.querySelector(`#${boardSide}-board-manual-ship-dropdown`);\n    const button = document.querySelector(`#${boardSide}-board-manual-placement-button`);\n\n    if (!dropdown || !button) {\n      console.error(`Required DOM Elements Not Found For ${boardSide} Board Dropdown`);\n      return;\n    }\n\n    const unplacedShips = this.game.getUnplacedShips(player);\n\n    dropdown.options.length = 0;\n    unplacedShips.forEach((ship) => {\n      const option = document.createElement(\"option\");\n      option.textContent = ship;\n      dropdown.appendChild(option);\n    });\n\n    button.disabled = unplacedShips.length === 0;\n  }\n\n  populateLeftBoardShipDropdown() {\n    this.populateShipDropdown(true);\n  }\n\n  populateRightBoardShipDropdown() {\n    this.populateShipDropdown(false);\n  }\n\n  /**\n   * Parses input coordinates (e.g., \"A1\") into array format [row, column]\n   * @param {string} input - User input string coordinates (e.g., \"A1\", \"J10\")\n   * @returns {number[]|null} Array [row, column] or null if invalid\n   */\n  parseCoordinates(input) {\n    const coordinates = input.trim().toUpperCase();\n    const validPattern = /^[A-J]([1-9]|10)$/.test(coordinates);\n    if (!validPattern) {\n      return null;\n    }\n\n    const rowLetter = coordinates[0];\n    const columnNumber = coordinates.slice(1);\n\n    const row = rowLetter.charCodeAt(0) - GameController.ASCII_OFFSET_A;\n    const column = parseInt(columnNumber) - 1;\n\n    return [row, column];\n  }\n\n  clearPlacementErrors() {\n    const leftBoardManualPlacementError = document.querySelector(\n      \"#left-board-manual-placement-error\",\n    );\n    const rightBoardManualPlacementError = document.querySelector(\n      \"#right-board-manual-placement-error\",\n    );\n\n    if (!leftBoardManualPlacementError || !rightBoardManualPlacementError) {\n      console.error(\"Placement Error Elements Not Found\");\n      return;\n    }\n\n    leftBoardManualPlacementError.textContent = \"\";\n    rightBoardManualPlacementError.textContent = \"\";\n  }\n}\n\nexport { GameController };\n","import { Ship } from \"./Ship.js\";\n\nclass Renderer {\n  static BOARD_SIZE = 10;\n\n  constructor() {}\n\n  /**\n   * Creates the visual representation of a game board\n   * @returns {HTMLElement} The game board DOM element with 100 squares\n   */\n  createGameBoard() {\n    const gameBoard = document.createElement(\"div\");\n    gameBoard.classList.add(\"game-board\");\n\n    for (let i = 0; i < Renderer.BOARD_SIZE; i++) {\n      for (let j = 0; j < Renderer.BOARD_SIZE; j++) {\n        const gameBoardSquare = document.createElement(\"div\");\n        gameBoardSquare.classList.add(\"game-board-square\");\n        gameBoardSquare.dataset.row = i;\n        gameBoardSquare.dataset.column = j;\n        gameBoard.appendChild(gameBoardSquare);\n      }\n    }\n\n    return gameBoard;\n  }\n\n  /**\n   * Updates the visual representation of the game board based on current game state\n   * @param {HTMLElement} gameBoard - The game board DOM element to update\n   * @param {Player} player - The player whose game board to update\n   * @param {boolean} isPlayerBoard - If true, shows ships; If false, hides non-hit ships\n   * @returns {void}\n   */\n  updateGameBoard(gameBoard, player, isPlayerBoard = true) {\n    if (!gameBoard) {\n      console.error(\"Game board element not found for update\");\n      return;\n    }\n\n    const squares = gameBoard.querySelectorAll(\".game-board-square\");\n\n    if (squares.length === 0) {\n      console.error(\"No squares found on game board for update\");\n      return;\n    }\n\n    for (let i = 0; i < Renderer.BOARD_SIZE; i++) {\n      for (let j = 0; j < Renderer.BOARD_SIZE; j++) {\n        const squareIndex = i * Renderer.BOARD_SIZE + j;\n        const targetSquare = squares[squareIndex];\n        const playerBoardValue = player.gameBoard.board[i][j];\n\n        const coordinates = `${i},${j}`;\n\n        if (player.gameBoard.hits.has(coordinates)) {\n          this.resetSquareClasses(targetSquare);\n          targetSquare.classList.add(\"hit\");\n        } else if (player.gameBoard.misses.has(coordinates)) {\n          this.resetSquareClasses(targetSquare);\n          targetSquare.classList.add(\"miss\");\n        } else if (playerBoardValue === null) {\n          this.resetSquareClasses(targetSquare);\n          targetSquare.classList.add(\"water\");\n        } else if (playerBoardValue instanceof Ship) {\n          this.resetSquareClasses(targetSquare);\n          if (isPlayerBoard) {\n            targetSquare.classList.add(\"ship\");\n          } else {\n            targetSquare.classList.add(\"hidden-ship\");\n          }\n        }\n      }\n    }\n  }\n\n  updatePlayerGameBoard(gameBoard, player) {\n    this.updateGameBoard(gameBoard, player, true);\n  }\n\n  updateOpponentGameBoard(gameBoard, player) {\n    this.updateGameBoard(gameBoard, player, false);\n  }\n\n  resetSquareClasses(square) {\n    square.className = \"game-board-square\";\n  }\n}\n\nexport { Renderer };\n","import \"./styles.css\";\nimport { GameController } from \"./GameController.js\";\nimport { Renderer } from \"./Renderer.js\";\n\nconst renderer = new Renderer();\nconst gameController = new GameController(renderer);\n\ngameController.initializeGame();\n"],"names":["module","exports","styleElement","nonce","setAttribute","stylesInDOM","getIndexByIdentifier","identifier","result","i","length","modulesToDom","list","options","idCountMap","identifiers","item","id","base","count","concat","indexByIdentifier","obj","css","media","sourceMap","supports","layer","references","updater","addElementStyle","byIndex","splice","push","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","styleSheet","cssText","firstChild","removeChild","appendChild","document","createTextNode","cssWithMappingToString","toString","this","map","content","needLayer","join","modules","dedupe","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","___CSS_LOADER_EXPORT___","element","createElement","setAttributes","attributes","insert","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","insertStyleElement","styleTagTransform","apply","parentNode","removeStyleElement","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","Ship","constructor","hits","hit","isSunk","SHIP_TYPES","Carrier","Battleship","Cruiser","Submarine","Destroyer","OG_UNPLACED_SHIPS","Game","player1","player2","player1UnplacedShips","player2UnplacedShips","currentPlayer","opponent","gameState","winner","switchTurn","isGameOver","gameBoard","allShipsSunk","endGame","processTurn","coordinates","type","attackInfo","computerAttack","updateComputerAttackStrategy","receiveAttack","placePlayerShip","player","shipName","direction","unplacedShips","getUnplacedShips","includes","console","error","ship","placeShip","indexOf","resetPlayerShips","resetGameBoard","isPlayerSetupComplete","canStartGame","GameBoard","static","initializeBoard","board","BOARD_SIZE","j","misses","Set","ships","row","column","MAX_COORDINATE","getShipAt","stringCoordinate","has","add","every","Player","computerAttackQueue","computerAttackMode","computerLockedDirection","computerCurrentTargetHits","opponentBoard","size","TOTAL_SQUARES","shift","randomRow","Math","floor","random","randomColumn","columns","filter","minColumn","min","maxColumn","max","rows","minRow","maxRow","lastHit","secondLastHit","attackedRow","attackedColumn","ShipPlacementController","game","renderer","currentDragData","callbacks","rotateDraggableShipsSetup","setUpDragAndDrop","draggableShips","querySelectorAll","forEach","addEventListener","event","preventDefault","rotateDraggableShip","handleDragStart","handleDragEnd","boardSquares","square","handleDragOver","handleDrop","shipData","shipType","dataset","parseInt","dataTransfer","setData","classList","clearPlacementPreview","showPlacementPreview","getData","parse","updateGameBoard","notifyShipPlaced","randomlyPlaceShips","placementResult","randomDirection","shipElement","newDirection","visual","previewSquares","targetRow","targetColumn","targetSquare","isValidPlacement","contains","cssClass","onShipPlaced","GameController","shipPlacementController","player1GameBoard","player2GameBoard","phase","squareEventListenersController","gameMode","isTransitioning","initializeGame","createGameBoard","leftBoard","rightBoard","setUpModeSelection","initializeGameLogic","populateLeftBoardShipDropdown","populateRightBoardShipDropdown","setUpShipPlacementButtons","shipPlacementCallbacks","clearPlacementErrors","setUpStartGameButtons","setUpPlayingGameButtons","setUpPassDeviceButton","updateGameStatusMessage","createGameWithMode","mode","startPlayingPhase","addSquareEventListeners","addSquareEventListenersForPvP","shipPlacementContainer","startGameButtonsContainer","playingGameButtonsContainer","startNewGame","removeSquareEventListeners","PVEButton","PVPButton","modeSelectionContainer","quickStartButtonContainer","handleManualPlacementButton","startGameButton","quickStartButton","startGameButtonsError","textContent","startNewGameButton","isLeftBoard","boardSide","dropdown","coordinatesInput","button","errorElement","directionInput","coordinatesInputValue","value","parseCoordinates","playerBoard","AbortController","updateOpponentGameBoard","setTimeout","handleComputerTurn","COMPUTER_TURN_DELAY_MS","signal","player1Board","player2Board","closest","isRightBoard","showPassDeviceScreen","PLAYER_TURN_DELAY_MS","passDeviceContinueButton","updatePlayerGameBoard","hideDeviceScreen","passDeviceScreen","passDeviceMessage","abort","gameStatusMessage","winnerNumber","winnerType","currentPlayerNumber","currentPlayerType","populateShipDropdown","option","disabled","input","trim","toUpperCase","test","rowLetter","columnNumber","slice","charCodeAt","ASCII_OFFSET_A","leftBoardManualPlacementError","rightBoardManualPlacementError","Renderer","gameBoardSquare","isPlayerBoard","squares","playerBoardValue","resetSquareClasses","className"],"sourceRoot":""}